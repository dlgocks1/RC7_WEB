{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { batch, useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { setLogin } from 'store/action/UserDataAction';\nimport { CustomPost } from 'utils/api';\nexport const useLogin = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [loginSuccess, setLoginSuccess] = useState(false);\n\n  async function LoginWithjwt(jwt) {\n    const result = await CustomPost({\n      url: '/web/login',\n      headers: {\n        'x-access-token': jwt\n      }\n    });\n\n    switch (result.code) {\n      case 1001:\n        // 로그인 성공\n        console.log(result);\n        setLoginSuccess(true);\n        batch(() => {\n          dispatch(setLogin({\n            jwt,\n            profileImageUrl: result.result.profileImageUrl,\n            userId: result.result.userId\n          }));\n        });\n        break;\n\n      default:\n    }\n  }\n\n  async function LoginWithEmail(data) {\n    const result = await CustomPost({\n      url: '/web/login',\n      body: {\n        email: data.email,\n        password: data.password\n      }\n    });\n\n    switch (result.code) {\n      case 1004:\n        // 로그인 성공\n        console.log(result);\n        setLoginSuccess(true);\n        batch(() => {\n          dispatch(setLogin({\n            jwt: result.result.jwt,\n            profileImageUrl: result.result.profileImageUrl,\n            userId: result.result.userId\n          })); // dispatch(setLoginModalInvisible());\n        });\n        localStorage.setItem('jwt', result.result.jwt);\n        break;\n\n      default:\n    }\n  }\n\n  return {\n    LoginWithjwt,\n    LoginWithEmail,\n    loginSuccess\n  };\n};\n\n_s(useLogin, \"VidiQ8pNrXv+RnZO6t1CO5LCIm4=\", false, function () {\n  return [useDispatch, useNavigate];\n});","map":{"version":3,"names":["React","useState","batch","useDispatch","useNavigate","setLogin","CustomPost","useLogin","dispatch","navigate","loginSuccess","setLoginSuccess","LoginWithjwt","jwt","result","url","headers","code","console","log","profileImageUrl","userId","LoginWithEmail","data","body","email","password","localStorage","setItem"],"sources":["C:/Users/cksgo/Desktop/RC7/Rising_Test/wanted_web_pyengchangbori/src/hoc/useLogin.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { batch, useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { setLogin } from 'store/action/UserDataAction';\r\nimport { CustomPost } from 'utils/api';\r\n\r\nexport const useLogin = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst navigate = useNavigate();\r\n\tconst [loginSuccess, setLoginSuccess] = useState(false);\r\n\r\n\tasync function LoginWithjwt(jwt) {\r\n\t\tconst result = await CustomPost({\r\n\t\t\turl: '/web/login',\r\n\t\t\theaders: { 'x-access-token': jwt },\r\n\t\t});\r\n\r\n\t\tswitch (result.code) {\r\n\t\t\tcase 1001:\r\n\t\t\t\t// 로그인 성공\r\n\t\t\t\tconsole.log(result);\r\n\t\t\t\tsetLoginSuccess(true);\r\n\t\t\t\tbatch(() => {\r\n\t\t\t\t\tdispatch(\r\n\t\t\t\t\t\tsetLogin({\r\n\t\t\t\t\t\t\tjwt,\r\n\t\t\t\t\t\t\tprofileImageUrl: result.result.profileImageUrl,\r\n\t\t\t\t\t\t\tuserId: result.result.userId,\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t}\r\n\t}\r\n\r\n\tasync function LoginWithEmail(data) {\r\n\t\tconst result = await CustomPost({\r\n\t\t\turl: '/web/login',\r\n\t\t\tbody: {\r\n\t\t\t\temail: data.email,\r\n\t\t\t\tpassword: data.password,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tswitch (result.code) {\r\n\t\t\tcase 1004:\r\n\t\t\t\t// 로그인 성공\r\n\t\t\t\tconsole.log(result);\r\n\t\t\t\tsetLoginSuccess(true);\r\n\t\t\t\tbatch(() => {\r\n\t\t\t\t\tdispatch(\r\n\t\t\t\t\t\tsetLogin({\r\n\t\t\t\t\t\t\tjwt: result.result.jwt,\r\n\t\t\t\t\t\t\tprofileImageUrl: result.result.profileImageUrl,\r\n\t\t\t\t\t\t\tuserId: result.result.userId,\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t);\r\n\t\t\t\t\t// dispatch(setLoginModalInvisible());\r\n\t\t\t\t});\r\n\t\t\t\tlocalStorage.setItem('jwt', result.result.jwt);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t}\r\n\t}\r\n\r\n\treturn { LoginWithjwt, LoginWithEmail, loginSuccess };\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,WAAhB,QAAmC,aAAnC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,QAAT,QAAyB,6BAAzB;AACA,SAASC,UAAT,QAA2B,WAA3B;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EAC7B,MAAMC,QAAQ,GAAGL,WAAW,EAA5B;EACA,MAAMM,QAAQ,GAAGL,WAAW,EAA5B;EACA,MAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,KAAD,CAAhD;;EAEA,eAAeW,YAAf,CAA4BC,GAA5B,EAAiC;IAChC,MAAMC,MAAM,GAAG,MAAMR,UAAU,CAAC;MAC/BS,GAAG,EAAE,YAD0B;MAE/BC,OAAO,EAAE;QAAE,kBAAkBH;MAApB;IAFsB,CAAD,CAA/B;;IAKA,QAAQC,MAAM,CAACG,IAAf;MACC,KAAK,IAAL;QACC;QACAC,OAAO,CAACC,GAAR,CAAYL,MAAZ;QACAH,eAAe,CAAC,IAAD,CAAf;QACAT,KAAK,CAAC,MAAM;UACXM,QAAQ,CACPH,QAAQ,CAAC;YACRQ,GADQ;YAERO,eAAe,EAAEN,MAAM,CAACA,MAAP,CAAcM,eAFvB;YAGRC,MAAM,EAAEP,MAAM,CAACA,MAAP,CAAcO;UAHd,CAAD,CADD,CAAR;QAOA,CARI,CAAL;QASA;;MACD;IAfD;EAiBA;;EAED,eAAeC,cAAf,CAA8BC,IAA9B,EAAoC;IACnC,MAAMT,MAAM,GAAG,MAAMR,UAAU,CAAC;MAC/BS,GAAG,EAAE,YAD0B;MAE/BS,IAAI,EAAE;QACLC,KAAK,EAAEF,IAAI,CAACE,KADP;QAELC,QAAQ,EAAEH,IAAI,CAACG;MAFV;IAFyB,CAAD,CAA/B;;IAQA,QAAQZ,MAAM,CAACG,IAAf;MACC,KAAK,IAAL;QACC;QACAC,OAAO,CAACC,GAAR,CAAYL,MAAZ;QACAH,eAAe,CAAC,IAAD,CAAf;QACAT,KAAK,CAAC,MAAM;UACXM,QAAQ,CACPH,QAAQ,CAAC;YACRQ,GAAG,EAAEC,MAAM,CAACA,MAAP,CAAcD,GADX;YAERO,eAAe,EAAEN,MAAM,CAACA,MAAP,CAAcM,eAFvB;YAGRC,MAAM,EAAEP,MAAM,CAACA,MAAP,CAAcO;UAHd,CAAD,CADD,CAAR,CADW,CAQX;QACA,CATI,CAAL;QAUAM,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA4Bd,MAAM,CAACA,MAAP,CAAcD,GAA1C;QACA;;MACD;IAjBD;EAmBA;;EAED,OAAO;IAAED,YAAF;IAAgBU,cAAhB;IAAgCZ;EAAhC,CAAP;AACA,CA7DM;;GAAMH,Q;UACKJ,W,EACAC,W"},"metadata":{},"sourceType":"module"}