{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setLogin } from 'store/action/UserDataAction';\nimport { CustomPost } from 'utils/api';\nimport { useLogin } from './useLogin';\n\nfunction AutoLogin(_ref) {\n  _s();\n\n  let {\n    loginState\n  } = _ref;\n  // const uselogin = useLogin();\n  const jwt = localStorage.getItem('jwt');\n  const dispatch = useDispatch();\n  console.log(loginState.read());\n  const loginData = loginState.read();\n  useEffect(() => {\n    // if (jwt !== null) {\n    // \tuselogin.LoginWithjwt({ jwt });\n    // }\n    switch (loginData.data.code) {\n      case 1001:\n        dispatch(setLogin({\n          jwt,\n          profileImageUrl: loginData.data.result.profileImageUrl,\n          userId: loginData.data.result.userId\n        }));\n        break;\n\n      default:\n    }\n  }, []);\n  return null;\n}\n\n_s(AutoLogin, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = AutoLogin;\nexport default AutoLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"AutoLogin\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","setLogin","CustomPost","useLogin","AutoLogin","loginState","jwt","localStorage","getItem","dispatch","console","log","read","loginData","data","code","profileImageUrl","result","userId"],"sources":["C:/Users/cksgo/Desktop/RC7/Rising_Test/wanted_web_pyengchangbori/src/hoc/AutoLogin.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setLogin } from 'store/action/UserDataAction';\r\nimport { CustomPost } from 'utils/api';\r\nimport { useLogin } from './useLogin';\r\n\r\nfunction AutoLogin({ loginState }) {\r\n\t// const uselogin = useLogin();\r\n\tconst jwt = localStorage.getItem('jwt');\r\n\tconst dispatch = useDispatch();\r\n\tconsole.log(loginState.read());\r\n\tconst loginData = loginState.read();\r\n\tuseEffect(() => {\r\n\t\t// if (jwt !== null) {\r\n\t\t// \tuselogin.LoginWithjwt({ jwt });\r\n\t\t// }\r\n\t\tswitch (loginData.data.code) {\r\n\t\t\tcase 1001:\r\n\t\t\t\tdispatch(\r\n\t\t\t\t\tsetLogin({\r\n\t\t\t\t\t\tjwt,\r\n\t\t\t\t\t\tprofileImageUrl: loginData.data.result.profileImageUrl,\r\n\t\t\t\t\t\tuserId: loginData.data.result.userId,\r\n\t\t\t\t\t}),\r\n\t\t\t\t);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t}\r\n\t}, []);\r\n\r\n\treturn null;\r\n}\r\n\r\nexport default AutoLogin;\r\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,QAAyB,6BAAzB;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,SAASC,QAAT,QAAyB,YAAzB;;AAEA,SAASC,SAAT,OAAmC;EAAA;;EAAA,IAAhB;IAAEC;EAAF,CAAgB;EAClC;EACA,MAAMC,GAAG,GAAGC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAZ;EACA,MAAMC,QAAQ,GAAGT,WAAW,EAA5B;EACAU,OAAO,CAACC,GAAR,CAAYN,UAAU,CAACO,IAAX,EAAZ;EACA,MAAMC,SAAS,GAAGR,UAAU,CAACO,IAAX,EAAlB;EACAd,SAAS,CAAC,MAAM;IACf;IACA;IACA;IACA,QAAQe,SAAS,CAACC,IAAV,CAAeC,IAAvB;MACC,KAAK,IAAL;QACCN,QAAQ,CACPR,QAAQ,CAAC;UACRK,GADQ;UAERU,eAAe,EAAEH,SAAS,CAACC,IAAV,CAAeG,MAAf,CAAsBD,eAF/B;UAGRE,MAAM,EAAEL,SAAS,CAACC,IAAV,CAAeG,MAAf,CAAsBC;QAHtB,CAAD,CADD,CAAR;QAOA;;MACD;IAVD;EAYA,CAhBQ,EAgBN,EAhBM,CAAT;EAkBA,OAAO,IAAP;AACA;;GAzBQd,S;UAGSJ,W;;;KAHTI,S;AA2BT,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}