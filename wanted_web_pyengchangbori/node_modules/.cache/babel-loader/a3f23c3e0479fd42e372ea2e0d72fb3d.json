{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cksgo\\\\Desktop\\\\RC7\\\\Rising_Test\\\\wanted_web_pyengchangbori\\\\src\\\\pages\\\\home\\\\Arrows.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n/* eslint-disable react/no-children-prop */\n\n/* eslint-disable jsx-a11y/control-has-associated-label */\n\n/* eslint-disable react/button-has-type */\nimport React, { useContext, useEffect, useState } from 'react';\nimport { VisibilityContext, slidingWindow, getItemsPos } from 'react-horizontal-scrolling-menu';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Arrow(_ref) {\n  let {\n    children,\n    disabled,\n    onClick\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(ArrowButton, {\n    disabled: disabled,\n    onClick: onClick,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 3\n  }, this); // return React.createElement(\n  // \t'button',\n  // \t{\n  // \t\tdisabled,\n  // \t\tonClick,\n  // \t\tstyle: {\n  // \t\t\tcursor: 'pointer',\n  // \t\t\tdisplay: 'flex',\n  // \t\t\tflexDirection: 'column',\n  // \t\t\tjustifyContent: 'center',\n  // \t\t\tright: '1%',\n  // \t\t\twidth: '20px',\n  // \t\t\tborder: '1px solid black',\n  // \t\t\topacity: disabled ? '0' : '1',\n  // \t\t\tuserSelect: 'none',\n  // \t\t},\n  // \t},\n  // \tchildren,\n  // );\n}\n\n_c = Arrow;\nexport function LeftArrow() {\n  _s();\n\n  const {\n    items,\n    visibleItems,\n    getItemById,\n    isFirstItemVisible,\n    scrollToItem,\n    visibleItemsWithoutSeparators,\n    initComplete\n  } = useContext(VisibilityContext);\n  const [disabled, setDisabled] = useState(!initComplete || initComplete && isFirstItemVisible);\n  useEffect(() => {\n    // NOTE: detect if whole component visible\n    if (visibleItemsWithoutSeparators.length) {\n      setDisabled(isFirstItemVisible);\n    }\n  }, [isFirstItemVisible, visibleItemsWithoutSeparators]); // NOTE: for center items\n\n  const prevGroupItems = slidingWindow(items.toItemsKeys(), visibleItems).prev();\n  const {\n    center\n  } = getItemsPos(prevGroupItems);\n\n  const scrollPrevCentered = () => scrollToItem(getItemById(center), 'smooth', 'center');\n\n  return /*#__PURE__*/_jsxDEV(Arrow, {\n    disabled: disabled,\n    onClick: () => {\n      scrollPrevCentered();\n    },\n    children: \"Left\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 3\n  }, this);\n}\n\n_s(LeftArrow, \"W/P61YGF3ITd/xDiLZnXNPwwwTg=\");\n\n_c2 = LeftArrow;\nexport function RightArrow() {\n  _s2();\n\n  const {\n    getItemById,\n    isLastItemVisible,\n    items,\n    scrollToItem,\n    visibleItems,\n    visibleItemsWithoutSeparators\n  } = useContext(VisibilityContext);\n  const [disabled, setDisabled] = useState(!visibleItemsWithoutSeparators.length && isLastItemVisible);\n  React.useEffect(() => {\n    if (visibleItemsWithoutSeparators.length) {\n      setDisabled(isLastItemVisible);\n    }\n  }, [isLastItemVisible, visibleItemsWithoutSeparators]); // NOTE: for center items\n\n  const nextGroupItems = slidingWindow(items.toItemsKeys(), visibleItems).next();\n  const {\n    center\n  } = getItemsPos(nextGroupItems);\n\n  const scrollNextCentered = () => scrollToItem(getItemById(center), 'smooth', 'center');\n\n  return /*#__PURE__*/React.createElement(Arrow, {\n    disabled,\n    onClick: scrollNextCentered\n  }, 'Right');\n}\n\n_s2(RightArrow, \"ye8GurCPsAVhdlZ3yqLDXOUhtBk=\");\n\n_c3 = RightArrow;\nconst ArrowButton = styled.div`\n\tcursor: pointer;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\tright: 1%;\n\twidth: 20px;\n\tborder: 1px solid black;\n\topacity: ${props => props.disabled ? '0' : '1'};\n`;\n_c4 = ArrowButton;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Arrow\");\n$RefreshReg$(_c2, \"LeftArrow\");\n$RefreshReg$(_c3, \"RightArrow\");\n$RefreshReg$(_c4, \"ArrowButton\");","map":{"version":3,"names":["React","useContext","useEffect","useState","VisibilityContext","slidingWindow","getItemsPos","styled","Arrow","children","disabled","onClick","LeftArrow","items","visibleItems","getItemById","isFirstItemVisible","scrollToItem","visibleItemsWithoutSeparators","initComplete","setDisabled","length","prevGroupItems","toItemsKeys","prev","center","scrollPrevCentered","RightArrow","isLastItemVisible","nextGroupItems","next","scrollNextCentered","createElement","ArrowButton","div","props"],"sources":["C:/Users/cksgo/Desktop/RC7/Rising_Test/wanted_web_pyengchangbori/src/pages/home/Arrows.jsx"],"sourcesContent":["/* eslint-disable react/no-children-prop */\r\n/* eslint-disable jsx-a11y/control-has-associated-label */\r\n/* eslint-disable react/button-has-type */\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport {\r\n\tVisibilityContext,\r\n\tslidingWindow,\r\n\tgetItemsPos,\r\n} from 'react-horizontal-scrolling-menu';\r\nimport styled from 'styled-components';\r\n\r\nfunction Arrow({ children, disabled, onClick }) {\r\n\treturn (\r\n\t\t<ArrowButton\r\n\t\t\tdisabled={disabled}\r\n\t\t\tonClick={onClick}\r\n\t\t\tchildren={children}\r\n\t\t/>\r\n\t);\r\n\t// return React.createElement(\r\n\t// \t'button',\r\n\t// \t{\r\n\t// \t\tdisabled,\r\n\t// \t\tonClick,\r\n\t// \t\tstyle: {\r\n\t// \t\t\tcursor: 'pointer',\r\n\t// \t\t\tdisplay: 'flex',\r\n\t// \t\t\tflexDirection: 'column',\r\n\t// \t\t\tjustifyContent: 'center',\r\n\t// \t\t\tright: '1%',\r\n\t// \t\t\twidth: '20px',\r\n\t// \t\t\tborder: '1px solid black',\r\n\t// \t\t\topacity: disabled ? '0' : '1',\r\n\t// \t\t\tuserSelect: 'none',\r\n\t// \t\t},\r\n\t// \t},\r\n\t// \tchildren,\r\n\t// );\r\n}\r\n\r\nexport function LeftArrow() {\r\n\tconst {\r\n\t\titems,\r\n\t\tvisibleItems,\r\n\t\tgetItemById,\r\n\t\tisFirstItemVisible,\r\n\t\tscrollToItem,\r\n\t\tvisibleItemsWithoutSeparators,\r\n\t\tinitComplete,\r\n\t} = useContext(VisibilityContext);\r\n\r\n\tconst [disabled, setDisabled] = useState(\r\n\t\t!initComplete || (initComplete && isFirstItemVisible),\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\t// NOTE: detect if whole component visible\r\n\t\tif (visibleItemsWithoutSeparators.length) {\r\n\t\t\tsetDisabled(isFirstItemVisible);\r\n\t\t}\r\n\t}, [isFirstItemVisible, visibleItemsWithoutSeparators]);\r\n\t// NOTE: for center items\r\n\tconst prevGroupItems = slidingWindow(\r\n\t\titems.toItemsKeys(),\r\n\t\tvisibleItems,\r\n\t).prev();\r\n\tconst { center } = getItemsPos(prevGroupItems);\r\n\tconst scrollPrevCentered = () =>\r\n\t\tscrollToItem(getItemById(center), 'smooth', 'center');\r\n\r\n\treturn (\r\n\t\t<Arrow\r\n\t\t\tdisabled={disabled}\r\n\t\t\tonClick={() => {\r\n\t\t\t\tscrollPrevCentered();\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\tLeft\r\n\t\t</Arrow>\r\n\t);\r\n}\r\n\r\nexport function RightArrow() {\r\n\tconst {\r\n\t\tgetItemById,\r\n\t\tisLastItemVisible,\r\n\t\titems,\r\n\t\tscrollToItem,\r\n\t\tvisibleItems,\r\n\t\tvisibleItemsWithoutSeparators,\r\n\t} = useContext(VisibilityContext);\r\n\tconst [disabled, setDisabled] = useState(\r\n\t\t!visibleItemsWithoutSeparators.length && isLastItemVisible,\r\n\t);\r\n\tReact.useEffect(() => {\r\n\t\tif (visibleItemsWithoutSeparators.length) {\r\n\t\t\tsetDisabled(isLastItemVisible);\r\n\t\t}\r\n\t}, [isLastItemVisible, visibleItemsWithoutSeparators]);\r\n\t// NOTE: for center items\r\n\tconst nextGroupItems = slidingWindow(\r\n\t\titems.toItemsKeys(),\r\n\t\tvisibleItems,\r\n\t).next();\r\n\tconst { center } = getItemsPos(nextGroupItems);\r\n\tconst scrollNextCentered = () =>\r\n\t\tscrollToItem(getItemById(center), 'smooth', 'center');\r\n\treturn React.createElement(\r\n\t\tArrow,\r\n\t\t{ disabled, onClick: scrollNextCentered },\r\n\t\t'Right',\r\n\t);\r\n}\r\n\r\nconst ArrowButton = styled.div`\r\n\tcursor: pointer;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: center;\r\n\tright: 1%;\r\n\twidth: 20px;\r\n\tborder: 1px solid black;\r\n\topacity: ${(props) => (props.disabled ? '0' : '1')};\r\n`;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}