{"ast":null,"code":"import axios from 'axios';\nimport { useEffect, useState } from 'react';\n\nconst useHandleNetwork = () => {\n  // const [data, setData] = useState();\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [error, setError] = useState('');\n  const Get = _ref => {\n    let {\n      url,\n      header,\n      body\n    } = _ref;\n    let result;\n\n    const fetchData = async () => {\n      try {\n        await axios(url).then(res => {\n          result = res.data;\n        }).finally(() => {});\n      } catch (error) {\n        throw new Error(error);\n      }\n    };\n\n    return {\n      result\n    };\n  };\n\n  async function Post(_ref2) {\n    let {\n      url,\n      header,\n      body\n    } = _ref2;\n    let result;\n\n    const fetchData = async () => {\n      try {\n        await axios.post(url, body).then(res => {\n          result = res.data;\n          console.log(result);\n        }).finally(() => {});\n      } catch (error) {\n        throw new Error(error);\n      }\n    };\n\n    fetchData(); // return result;\n  }\n\n  return {\n    Get,\n    Post\n  };\n};\n\nexport default useHandleNetwork;","map":{"version":3,"names":["axios","useEffect","useState","useHandleNetwork","Get","url","header","body","result","fetchData","then","res","data","finally","error","Error","Post","post","console","log"],"sources":["C:/Users/cksgo/Desktop/RC7/Rising_Test/wanted_web_pyengchangbori/src/hoc/useHandleNetwork.js"],"sourcesContent":["import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst useHandleNetwork = () => {\r\n\t// const [data, setData] = useState();\r\n\t// const [isLoading, setIsLoading] = useState(false);\r\n\t// const [error, setError] = useState('');\r\n\r\n\tconst Get = ({ url, header, body }) => {\r\n\t\tlet result;\r\n\t\tconst fetchData = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tawait axios(url)\r\n\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\tresult = res.data;\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.finally(() => {});\r\n\t\t\t} catch (error) {\r\n\t\t\t\tthrow new Error(error);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\treturn { result };\r\n\t};\r\n\r\n\tasync function Post({ url, header, body }) {\r\n\t\tlet result;\r\n\r\n\t\tconst fetchData = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tawait axios\r\n\t\t\t\t\t.post(url, body)\r\n\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\tresult = res.data;\r\n\t\t\t\t\t\tconsole.log(result);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.finally(() => {});\r\n\t\t\t} catch (error) {\r\n\t\t\t\tthrow new Error(error);\r\n\t\t\t}\r\n\t\t};\r\n\t\tfetchData();\r\n\r\n\t\t// return result;\r\n\t}\r\n\r\n\treturn { Get, Post };\r\n};\r\n\r\nexport default useHandleNetwork;\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;EAC9B;EACA;EACA;EAEA,MAAMC,GAAG,GAAG,QAA2B;IAAA,IAA1B;MAAEC,GAAF;MAAOC,MAAP;MAAeC;IAAf,CAA0B;IACtC,IAAIC,MAAJ;;IACA,MAAMC,SAAS,GAAG,YAAY;MAC7B,IAAI;QACH,MAAMT,KAAK,CAACK,GAAD,CAAL,CACJK,IADI,CACEC,GAAD,IAAS;UACdH,MAAM,GAAGG,GAAG,CAACC,IAAb;QACA,CAHI,EAIJC,OAJI,CAII,MAAM,CAAE,CAJZ,CAAN;MAKA,CAND,CAME,OAAOC,KAAP,EAAc;QACf,MAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;MACA;IACD,CAVD;;IAYA,OAAO;MAAEN;IAAF,CAAP;EACA,CAfD;;EAiBA,eAAeQ,IAAf,QAA2C;IAAA,IAAvB;MAAEX,GAAF;MAAOC,MAAP;MAAeC;IAAf,CAAuB;IAC1C,IAAIC,MAAJ;;IAEA,MAAMC,SAAS,GAAG,YAAY;MAC7B,IAAI;QACH,MAAMT,KAAK,CACTiB,IADI,CACCZ,GADD,EACME,IADN,EAEJG,IAFI,CAEEC,GAAD,IAAS;UACdH,MAAM,GAAGG,GAAG,CAACC,IAAb;UACAM,OAAO,CAACC,GAAR,CAAYX,MAAZ;QACA,CALI,EAMJK,OANI,CAMI,MAAM,CAAE,CANZ,CAAN;MAOA,CARD,CAQE,OAAOC,KAAP,EAAc;QACf,MAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;MACA;IACD,CAZD;;IAaAL,SAAS,GAhBiC,CAkB1C;EACA;;EAED,OAAO;IAAEL,GAAF;IAAOY;EAAP,CAAP;AACA,CA5CD;;AA8CA,eAAeb,gBAAf"},"metadata":{},"sourceType":"module"}