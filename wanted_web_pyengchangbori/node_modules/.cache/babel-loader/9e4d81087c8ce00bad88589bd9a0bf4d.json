{"ast":null,"code":"import axios from 'axios';\nimport { useEffect, useState } from 'react';\n\nconst useHandleNetwork = () => {\n  // const [data, setData] = useState();\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [error, setError] = useState('');\n  const Get = _ref => {\n    let {\n      url,\n      header,\n      body\n    } = _ref;\n    let result;\n\n    const fetchData = async () => {\n      try {\n        await axios(url).then(res => {\n          result = res.data;\n        }).finally(() => {});\n      } catch (error) {\n        throw new Error(error);\n      }\n    };\n\n    return {\n      result\n    };\n  };\n\n  const Post = _ref2 => {\n    let {\n      url,\n      header,\n      body\n    } = _ref2;\n    let isLoading = false;\n    let data;\n\n    const fetchData = async () => {\n      try {\n        const res = await axios({\n          method: 'post',\n          url,\n          headers: header,\n          data: body\n        }); // await axios\n        // \t.post(url)\n        // \t.then((res) => {\n        // \t\tdata = res.data;\n        // \t})\n        // \t.finally(() => {\n        // \t\tisLoading = true;\n        // \t});\n      } catch (error) {\n        // setError(error); 에러를 내보내고 싶으면 이렇게 하기\n        throw new Error(error);\n      }\n    };\n\n    if (!isLoading) {\n      fetchData();\n      isLoading = true;\n    }\n\n    return {\n      data,\n      isLoading\n    };\n  };\n\n  return {\n    Get,\n    Post\n  };\n};\n\nexport default useHandleNetwork;","map":{"version":3,"names":["axios","useEffect","useState","useHandleNetwork","Get","url","header","body","result","fetchData","then","res","data","finally","error","Error","Post","isLoading","method","headers"],"sources":["C:/Users/cksgo/Desktop/RC7/Rising_Test/wanted_web_pyengchangbori/src/hoc/useHandleNetwork.js"],"sourcesContent":["import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst useHandleNetwork = () => {\r\n\t// const [data, setData] = useState();\r\n\t// const [isLoading, setIsLoading] = useState(false);\r\n\t// const [error, setError] = useState('');\r\n\r\n\tconst Get = ({ url, header, body }) => {\r\n\t\tlet result;\r\n\t\tconst fetchData = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tawait axios(url)\r\n\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\tresult = res.data;\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.finally(() => {});\r\n\t\t\t} catch (error) {\r\n\t\t\t\tthrow new Error(error);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\treturn { result };\r\n\t};\r\n\r\n\tconst Post = ({ url, header, body }) => {\r\n\t\tlet isLoading = false;\r\n\t\tlet data;\r\n\r\n\t\tconst fetchData = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tconst res = await axios({\r\n\t\t\t\t\tmethod: 'post',\r\n\t\t\t\t\turl,\r\n\t\t\t\t\theaders: header,\r\n\t\t\t\t\tdata: body,\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// await axios\r\n\t\t\t\t// \t.post(url)\r\n\t\t\t\t// \t.then((res) => {\r\n\t\t\t\t// \t\tdata = res.data;\r\n\t\t\t\t// \t})\r\n\t\t\t\t// \t.finally(() => {\r\n\t\t\t\t// \t\tisLoading = true;\r\n\t\t\t\t// \t});\r\n\t\t\t} catch (error) {\r\n\t\t\t\t// setError(error); 에러를 내보내고 싶으면 이렇게 하기\r\n\t\t\t\tthrow new Error(error);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tif (!isLoading) {\r\n\t\t\tfetchData();\r\n\t\t\tisLoading = true;\r\n\t\t}\r\n\r\n\t\treturn { data, isLoading };\r\n\t};\r\n\r\n\treturn { Get, Post };\r\n};\r\n\r\nexport default useHandleNetwork;\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;EAC9B;EACA;EACA;EAEA,MAAMC,GAAG,GAAG,QAA2B;IAAA,IAA1B;MAAEC,GAAF;MAAOC,MAAP;MAAeC;IAAf,CAA0B;IACtC,IAAIC,MAAJ;;IACA,MAAMC,SAAS,GAAG,YAAY;MAC7B,IAAI;QACH,MAAMT,KAAK,CAACK,GAAD,CAAL,CACJK,IADI,CACEC,GAAD,IAAS;UACdH,MAAM,GAAGG,GAAG,CAACC,IAAb;QACA,CAHI,EAIJC,OAJI,CAII,MAAM,CAAE,CAJZ,CAAN;MAKA,CAND,CAME,OAAOC,KAAP,EAAc;QACf,MAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;MACA;IACD,CAVD;;IAYA,OAAO;MAAEN;IAAF,CAAP;EACA,CAfD;;EAiBA,MAAMQ,IAAI,GAAG,SAA2B;IAAA,IAA1B;MAAEX,GAAF;MAAOC,MAAP;MAAeC;IAAf,CAA0B;IACvC,IAAIU,SAAS,GAAG,KAAhB;IACA,IAAIL,IAAJ;;IAEA,MAAMH,SAAS,GAAG,YAAY;MAC7B,IAAI;QACH,MAAME,GAAG,GAAG,MAAMX,KAAK,CAAC;UACvBkB,MAAM,EAAE,MADe;UAEvBb,GAFuB;UAGvBc,OAAO,EAAEb,MAHc;UAIvBM,IAAI,EAAEL;QAJiB,CAAD,CAAvB,CADG,CAQH;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACA,CAhBD,CAgBE,OAAOO,KAAP,EAAc;QACf;QACA,MAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;MACA;IACD,CArBD;;IAuBA,IAAI,CAACG,SAAL,EAAgB;MACfR,SAAS;MACTQ,SAAS,GAAG,IAAZ;IACA;;IAED,OAAO;MAAEL,IAAF;MAAQK;IAAR,CAAP;EACA,CAjCD;;EAmCA,OAAO;IAAEb,GAAF;IAAOY;EAAP,CAAP;AACA,CA1DD;;AA4DA,eAAeb,gBAAf"},"metadata":{},"sourceType":"module"}