{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cksgo\\\\Desktop\\\\RC7\\\\Rising_Test\\\\wanted_web_pyengchangbori\\\\src\\\\hoc\\\\ErrorBoundary.js\";\n\n/* eslint-disable react/destructuring-assignment */\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ErrorBoundary extends React.Component {\n  constructor(props) {\n    const navigate = useNavigate();\n    super(props); // 클래스 컴포넌트의 state 생성자\n\n    this.state = {\n      hasError: false\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    // 다음 렌더링에서 폴백 UI가 보이도록 상태를 업데이트 합니다.\n    return {\n      hasError: true\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // 에러 리포팅 서비스에 에러를 기록할 수도 있습니다.\n    // console.log(error);\n    navigate('/Error'); // logErrorToMyService(error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // 폴백 UI를 커스텀하여 렌더링할 수 있습니다.\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: 'white'\n        },\n        children: \" \\uC5D0\\uB7EC \\uACBD\\uACC4\\uC5D0 \\uAC78\\uB9BC \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this);\n    }\n\n    return this.props.children;\n  }\n\n}","map":{"version":3,"names":["React","useNavigate","ErrorBoundary","Component","constructor","props","navigate","state","hasError","getDerivedStateFromError","error","componentDidCatch","errorInfo","render","color","children"],"sources":["C:/Users/cksgo/Desktop/RC7/Rising_Test/wanted_web_pyengchangbori/src/hoc/ErrorBoundary.js"],"sourcesContent":["/* eslint-disable react/destructuring-assignment */\r\nimport React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport class ErrorBoundary extends React.Component {\r\n\tconstructor(props) {\r\n\t\tconst navigate = useNavigate();\r\n\t\tsuper(props);\r\n\t\t// 클래스 컴포넌트의 state 생성자\r\n\t\tthis.state = { hasError: false };\r\n\t}\r\n\r\n\tstatic getDerivedStateFromError(error) {\r\n\t\t// 다음 렌더링에서 폴백 UI가 보이도록 상태를 업데이트 합니다.\r\n\t\treturn { hasError: true };\r\n\t}\r\n\r\n\tcomponentDidCatch(error, errorInfo) {\r\n\t\t// 에러 리포팅 서비스에 에러를 기록할 수도 있습니다.\r\n\t\t// console.log(error);\r\n\t\tnavigate('/Error');\r\n\t\t// logErrorToMyService(error, errorInfo);\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.hasError) {\r\n\t\t\t// 폴백 UI를 커스텀하여 렌더링할 수 있습니다.\r\n\t\t\treturn <h1 style={{ color: 'white' }}> 에러 경계에 걸림 </h1>;\r\n\t\t}\r\n\t\treturn this.props.children;\r\n\t}\r\n}\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AAEA,OAAO,MAAMC,aAAN,SAA4BF,KAAK,CAACG,SAAlC,CAA4C;EAClDC,WAAW,CAACC,KAAD,EAAQ;IAClB,MAAMC,QAAQ,GAAGL,WAAW,EAA5B;IACA,MAAMI,KAAN,EAFkB,CAGlB;;IACA,KAAKE,KAAL,GAAa;MAAEC,QAAQ,EAAE;IAAZ,CAAb;EACA;;EAE8B,OAAxBC,wBAAwB,CAACC,KAAD,EAAQ;IACtC;IACA,OAAO;MAAEF,QAAQ,EAAE;IAAZ,CAAP;EACA;;EAEDG,iBAAiB,CAACD,KAAD,EAAQE,SAAR,EAAmB;IACnC;IACA;IACAN,QAAQ,CAAC,QAAD,CAAR,CAHmC,CAInC;EACA;;EAEDO,MAAM,GAAG;IACR,IAAI,KAAKN,KAAL,CAAWC,QAAf,EAAyB;MACxB;MACA,oBAAO;QAAI,KAAK,EAAE;UAAEM,KAAK,EAAE;QAAT,CAAX;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAP;IACA;;IACD,OAAO,KAAKT,KAAL,CAAWU,QAAlB;EACA;;AA1BiD"},"metadata":{},"sourceType":"module"}